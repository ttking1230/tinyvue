{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/compile/parser-html.js","../../src/compile/index.js","../../src/observe/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/index.js"],"sourcesContent":["// 判断是否是一个对象{}\r\nexport function isObject(obj) {\r\n    return typeof obj === \"object\" && obj !== null;\r\n}\r\nexport function def(obj, key, value) {\r\n    Object.defineProperty(obj, key, {\r\n        enumerable: false,\r\n        configurable: false,\r\n        value: value\r\n    });\r\n}\r\n\r\nexport function proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key]\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue\r\n        }\r\n    });\r\n}","\r\nlet oldArrryMethods = Array.prototype;\r\nexport let arrayMethods = Object.create(oldArrryMethods);\r\nconst methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"unshift\",\r\n    \"shift\",\r\n    \"reverse\",\r\n    \"sort\",\r\n    \"splice\"\r\n]\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function (...args) {\r\n        // console.log(\"调用数组方法！\");\r\n        // console.log(args);\r\n        // AOP 切片编程\r\n        // （代理或者装饰器模式），先调用重写的方法，再调用原生方法\r\n        let result = oldArrryMethods[method].apply(this, args);\r\n        // 当 添加的属性还是对象时，要继续对新添加的属性进行劫持，添加get和set方法，变为响应式\r\n\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case \"push\":\r\n            case \"unshift\":\r\n                inserted = args;\r\n                break;\r\n            case \"splice\":\r\n                inserted = args.slice(2)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (inserted) {\r\n            ob.observerArray(inserted);\r\n        }\r\n\r\n\r\n        return result;\r\n    }\r\n});","import { isObject, def } from \"../util/index.js\"\r\nimport { arrayMethods } from \"./array.js\";\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // console.log(data, \"Observer类\")\r\n        // 给每一个监测的属性添加 __ob__ 属性\r\n        // 1、可判断是否为响应式对象（是否已经被监测）\r\n        // data.__ob__ = this;\r\n        def(data, '__ob__', this);\r\n        if (Array.isArray(data)) {\r\n            // 需要重写能够改变数组自身的方法，如this.arr.push({name:'zs'}) ,给新添加的属性设置get和set方法\r\n            data.__proto__ = arrayMethods;\r\n            // 对数组进行监测\r\n            // 数组每一项为对象时，才进行监测\r\n            this.observerArray(data);\r\n        } else {\r\n            // 对对象进行监测\r\n            this.walk(data);\r\n        }\r\n    }\r\n    observerArray(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            observe(data[i]);\r\n        }\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let value = data[key];\r\n            defineReactive(data, key, value);\r\n        }\r\n    }\r\n}\r\n\r\nexport function observe(data) {\r\n    // console.log(data, \"observe\");\r\n    // console.log(isObject(data));\r\n    if (!isObject(data)) {\r\n        return;\r\n    }\r\n\r\n    return new Observer(data);//用来观测对象\r\n}\r\n\r\n// 定义响应式数据，将数据变为可观测的响应式对象\r\nfunction defineReactive(data, key, value) {\r\n    // vue 数据层次过多，需要递归解析对象属性，一次添加set和get方法\r\n    // 递归实现深度监测\r\n    observe(value);\r\n    Object.defineProperty(data, key, {\r\n        get() {\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            if (value === newValue) return;\r\n            observe(newValue); //继续递归劫持用户设置的值，因为设置的值可能是一个对象，如 this.obj = {name:'zs'} => this.obj = {age: 20}\r\n            value = newValue\r\n        }\r\n    })\r\n\r\n}","import { observe } from \"./observe/index.js\"\r\nimport { proxy } from \"./util/index.js\"\r\n\r\nexport default function initState(vm) {\r\n    const options = vm.$options;\r\n    // console.log(options);\r\n    // vue 数据来源， 属性 方法 数据 计算属性  watch\r\n    if (options.props) {\r\n        initProps(vm);\r\n    }\r\n    if (options.methods) {\r\n        initMethods(vm);\r\n    }\r\n    if (options.data) {\r\n        initData(vm);\r\n    }\r\n    if (options.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (options.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\nfunction initProps() { }\r\nfunction initMethods() { }\r\n\r\nfunction initData(vm) {\r\n    // 数据初始化工作\r\n    let data = vm.$options.data;\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\r\n\r\n    //做了一层代理，vm.name 代理到 vm._data.name \r\n    for (let key in data) {\r\n        proxy(vm, \"_data\", key);\r\n    }\r\n\r\n    // console.log(data, \"数据初始化工作\")\r\n    // 对象劫持，数据发生改变得到通知，刷新页面\r\n    // Object.defineProperty() 给属性添加set和get方法，设置getter 和 setter\r\n    observe(data);\r\n}\r\nfunction initComputed() { }\r\nfunction initWatch() { }","// ast语法树，用对象来描述原生（html标签语法）语法的\r\n// 虚拟dom，用对象来描述dom节点的\r\n\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n// const dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconst doctype = /^<!DOCTYPE [^>]+>/i\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nconst comment = /^<!\\--/\r\nconst conditionalComment = /^<!\\[/\r\n\r\n\r\nlet root = null;//根节点 \r\nlet currentParent;//标识当前的父节点\r\nlet stack = [];\r\nconst ELEMENT_TYPE = 1;//元素类型，如div,p,span....\r\nconst TEXT_TYPE = 3;//文本类型\r\n\r\nfunction createASTElement(tagName, attrs) {\r\n    return {\r\n        tagName: tagName,\r\n        type: ELEMENT_TYPE,\r\n        children: [],\r\n        attrs: attrs,\r\n        parent: null,\r\n    }\r\n}\r\n\r\nfunction start(tagName, attrs) {\r\n    console.log(\"开始标签：\", tagName, \"属性是：\", attrs);\r\n    // 遇到开始标签，就创建一个ast元素\r\n    let element = createASTElement(tagName, attrs);\r\n    if (!root) {\r\n        root = element\r\n    }\r\n    currentParent = element;//把当前元素标记为父ast树\r\n    stack.push(element);\r\n}\r\nfunction charts(text) {\r\n    console.log(\"文本是：\", text);\r\n    text = text.replace(/\\s/g, '');\r\n    if (text) {\r\n        currentParent.children.push({\r\n            text,\r\n            type: TEXT_TYPE\r\n        });\r\n    }\r\n}\r\nfunction end(tagName) {\r\n    console.log(\"结束标签：\", tagName);\r\n    let element = stack.pop();\r\n    currentParent = stack[stack.length - 1];\r\n    if (currentParent) {\r\n        element.parent = currentParent;\r\n        currentParent.children.push(element);\r\n    }\r\n}\r\n\r\n\r\nexport function parseHTML(html) {\r\n    // 循环解析html字符串\r\n    while (html) {\r\n        let textEnd = html.indexOf(\"<\");\r\n        if (textEnd === 0) {\r\n            // 如果为0，肯定是第一个标签，且不是开始标签就是结束标签 \r\n            // parseStartTag方法获取匹配的结果，tagName  attrs\r\n            let startTagMatch = parseStartTag();\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;//如果开始标签匹配完毕后，继续下一次的匹配\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        let text;\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd);\r\n        }\r\n        if (text) {\r\n            advance(text.length);\r\n            charts(text);\r\n        }\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        let start = html.match(startTagOpen);//匹配第一个标签名\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);//将标签删除\r\n            let end, attr;\r\n            // while 匹配属性\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);//将属性删除\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length);//标签名和属性已经匹配完成，去掉开始标签的>\r\n                return match;\r\n            }\r\n            console.log(match)\r\n        }\r\n\r\n        console.log(html)\r\n    }\r\n    return root;\r\n}\r\n\r\n\r\n\r\n// html标签转换成ast语法树\r\n// <div id=\"app\">\r\n//     <p>hello</p>\r\n// </div>\r\n// // nodeType===1 元素    nodeType === 3 文本\r\n// let root = {\r\n//     tag: \"div\",\r\n//     type: 1,\r\n//     attrs: [{ name: \"id\", value: \"app\" }],\r\n//     parent: null,\r\n//     child: [\r\n//         {\r\n//             tag: \"p\",\r\n//             type: 1,\r\n//             attrs: [],\r\n//             parent: root,\r\n//             child: [\r\n//                 {\r\n//                     text: \"hello\",\r\n//                     type: 3\r\n//                 }\r\n//             ]\r\n//         }\r\n//     ]\r\n// }","import { parseHTML } from \"./parser-html.js\"\r\n\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n// 处理属性，拼接成为属性的字符串\r\nfunction genProps(attrs) {\r\n    let str = \"\";\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === \"style\") {\r\n            let obj = {};\r\n            attr.value.split(\";\").forEach(item => {\r\n                let [key, value] = item.split(\":\");\r\n                obj[key] =  value;\r\n            });\r\n            attr.value = obj;\r\n            str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n        }\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nfunction genChildren(el) {\r\n    let children = el.children;\r\n    if (children && children.length > 0) {\r\n        return `${children.map(c => gen(c)).join(',')}`\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        // 元素标签\r\n        return generate(node)\r\n    } else {\r\n        let text = node.text;\r\n        let tokens = [];\r\n        let match, index;\r\n        let lastIndex = defaultTagRE.lastIndex = 0;\r\n        while (match = defaultTagRE.exec(text)) {\r\n            index = match.index;\r\n            if (index > lastIndex) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`);\r\n            lastIndex = index + match[0].length;\r\n        }\r\n        if (lastIndex < text.length) {\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n        }\r\n        return `_v(${tokens.join('+')})`\r\n    }\r\n}\r\nfunction generate(el) {\r\n    let children = genChildren(el);\r\n    let code = `_c(\"${el.tagName}\",${el.attrs.length > 0 ? genProps(el.attrs) : 'undefined'\r\n        }${children ? `,${children}` : ''\r\n        })`\r\n\r\n    return code;\r\n}\r\nexport function compileToFunction(template) {\r\n    console.log(template, 'template 转换 render方法');\r\n    // 1、解析html字符串，将html字符串解析成ast语法树\r\n    let root = parseHTML(template);\r\n    console.log(root);\r\n\r\n\r\n    // 2、需要将ast语法树生成最终的render函数,就是字符串拼接（模板引擎）\r\n    // 核心思路就是将下面的模板转化成下面的字符串\r\n    // 模板： <div id=\"app\"><p>hello {{name}}</p> hello</div>\r\n    // 将html字符串转化成ast语法树，再将ast语法树，再次转化成下面的js语法\r\n    // 字符串： _c(\"div\",{id:app},_c(\"p\",undefined,_v(\"hello\" + _s(name))),_v(\"hello\"))\r\n\r\n    let code = generate(root);\r\n    console.log(code);\r\n\r\n    //所有的模板引擎实现，都需要new Function + with\r\n    let renderFn = new Function(`with(this){return ${code}}`);\r\n    // renderFn = function render() { }\r\n    // vue的render方法返回的是虚拟dom\r\n    return renderFn //render函数\r\n}\r\n\r\n\r\n","\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, callback, options) {\r\n        this.vm = vm;\r\n        this.callback = callback;\r\n        this.options = options;\r\n\r\n        // 将内部传进来的回调方法放在getter属性上\r\n        this.getter = exprOrFn;\r\n        this.get();\r\n    }\r\n    get() {\r\n        this.getter();\r\n    }\r\n}\r\nexport default Watcher","export function patch(oldVnode, vnode) {\r\n    console.log(\"开始patch，虚拟节点vnode创建出真实的节点，替换掉真实的vm.$el\");\r\n    console.log(oldVnode, vnode);\r\n\r\n    // 递归创建真实节点，替换掉老节点\r\n    // 第一步：判断是更新还是渲染\r\n    // 虚拟节点里面没有nodeType，真实节点里面有\r\n    const isRealEmement = oldVnode.nodeType;\r\n    if (isRealEmement) {\r\n        const oldElm = oldVnode;//当前的 div id=\"app\"\r\n        const parentElm = oldElm.parentNode;//body\r\n\r\n        // vnode创建成真实dom\r\n        let el = createElm(vnode);\r\n        // createElm(vnode)创建的新的真实dom插入到老节点的后面\r\n        parentElm.insertBefore(el, oldElm.nextSibling);\r\n        // 然后删除老节点,这样就完成了替换\r\n        parentElm.removeChild(oldElm);\r\n    }\r\n}\r\n\r\nfunction createElm(vnode) { //根据虚拟节点创建真实的节点\r\n    console.log(vnode, \"根据虚拟节点创建真实的节点\");\r\n    let { tag, children, key, data, text } = vnode;\r\n\r\n    // tag为标签，就创建标签，否则就是文本并创建\r\n    if (typeof tag === \"string\") {\r\n        vnode.el = document.createElement(tag);\r\n        updateProperties(vnode);\r\n        //递归创建子节点，并将子节点添加到父节点上面 \r\n        children.forEach(child => {\r\n            return vnode.el.appendChild(createElm(child));\r\n        })\r\n    } else {\r\n        // 创建的真实节点放在vnode上面，\r\n        // 虚拟dom上映射着真实的dom，方便后续更新操作\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el\r\n}\r\n\r\n// 更新属性\r\nfunction updateProperties(vnode) {\r\n    let newProps = vnode.data;\r\n    let el = vnode.el;\r\n\r\n    for (let key in newProps) {\r\n        if (key === \"style\") {\r\n            for (let styleName in newProps.style) {\r\n                el.style[styleName] = newProps.style[styleName];\r\n            }\r\n        } else if (key === \"class\") {\r\n            el.className = newProps.class;\r\n        } else {\r\n            el.setAttribute(key, newProps[key]);\r\n        }\r\n    }\r\n}","import Watcher from \"./observe/watcher.js\"\r\nimport { patch } from \"./vdom/patch.js\"\r\n\r\nexport default function lifecycleMixin(Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        console.log(vnode);\r\n        let vm = this;\r\n        // 此时虚拟dom已经生成，通过虚拟dom vnode，去渲染出真实的dom\r\n        // 需要用虚拟节点vnode创建出真实的节点，替换掉真实的vm.$el\r\n        vm.$el = patch(vm.$el, vnode);\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    const options = vm.$options;\r\n    vm.$el = el;//真是的dom元素\r\n    console.log(options)\r\n\r\n    // 渲染页面\r\n    // 无论是渲染还是更新都会调用updateComponent函数 \r\n    let updateComponent = () => {\r\n        // 第一步：调用vm._render生成虚拟dom，vm._render调用的是options.render\r\n        // vm._render为vue原型上的一个方法，见render.js\r\n        // 在 调用mountComponent函数之前已经将创建的render方法挂载到了options上面\r\n        // 第二步：vm._update 将虚拟dom生成真实的dom\r\n        vm._update(vm._render());\r\n    }\r\n\r\n    // 渲染watcher，每个组件都有一个渲染watcher\r\n    // true 表示是一个渲染watcher\r\n    // 每次new一个实例对象的时候，都会起执行updateComponent方法\r\n\r\n    new Watcher(vm, updateComponent, () => { }, true);\r\n\r\n\r\n}\r\n\r\n","import initState from \"./state.js\"\r\nimport { compileToFunction } from \"./compile/index.js\"\r\nimport { mountComponent } from \"./lifecycle.js\"\r\nexport default function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        console.log(options)\r\n        // 数据的劫持\r\n        const vm = this;\r\n        // vue中this.$options 指代的就是用户定义的属性\r\n        vm.$options = options;\r\n\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n\r\n        // 用户传入 el 需要将数据渲染到页面上,实现挂载流程\r\n        // 模板有三种方式 render template el\r\n        // 有个顺序优先级的 render最高 \r\n\r\n        if (vm.$options.el) {\r\n            console.log(vm.$options.el);\r\n            vm.$mount(vm.$options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        let vm = this;\r\n        let options = vm.$options;\r\n        el = document.querySelector(el);\r\n        console.log(el)\r\n        // 优先级，默认查找有没有render方法，没有render会去查找有没有template，\r\n        // 没有template 会去使用 el 中的内容\r\n        if (!options.render) {\r\n            let template = options.template;//取出模板，如果有对模板进行编译\r\n            if (!template && el) {\r\n                // 没有模板，且有 el ，将el赋值给template\r\n                template = el.outerHTML;\r\n            }\r\n            // 将template转化成render函数\r\n            const render = compileToFunction(template);\r\n            options.render = render;\r\n        }\r\n        // 拿到render方法之后，开始渲染当前的组件\r\n        // vm上面可以拿到options render方法，执行render方法之后的结果替换掉 el这个标签\r\n        mountComponent(vm, el);\r\n    }\r\n}","export function createElement(tag, data = {}, ...children) {\r\n    // console.log(tag, data, children);\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.key;\r\n    }\r\n    return vnode(tag, data, key, children, undefined);\r\n}\r\nexport function createTextNode(text) {\r\n    // console.log(text);\r\n    return vnode(undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// 创建虚拟dom\r\nfunction vnode(tag, data, key, children, text) {\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text\r\n    }\r\n}\r\n\r\n// 1、将template模板（html标签）转换成ast语法树 => 生成render方法  => 生成虚拟dom => 真实的dom\r\n// 2、更新的时候重新生成虚拟dom，和上次的虚拟dom作对比，只把改变的虚拟dom重新生成真实的dom","import { createElement, createTextNode } from \"./vdom/create-element.js\"\r\n\r\nexport default function renderMixin(Vue) {\r\n    // \r\n    // _c 创建元素的虚拟节点\r\n    // _v 创建文本的虚拟节点\r\n    // _s JSON，stringify\r\n    // 使用了 with ，render.call(vm)，调用_c,_v,_s方法时，会去vm以及vm的原型上面去找这些方法\r\n    // 巧妙的一点是，_s(val)函数执行时，传入的val即为模板中设置的属性{{name}}，因为with(this){},\r\n    // 此时的上下文为this，即为传入的vm，即是执行vm.name，之前已做过proxy()代理，vm.name => vm._data.name\r\n\r\n    Vue.prototype._c = function () {\r\n        return createElement(...arguments);\r\n    }\r\n    Vue.prototype._v = function (text) {\r\n        return createTextNode(text);\r\n    }\r\n    Vue.prototype._s = function (val) {\r\n        return val === null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\r\n    }\r\n\r\n    Vue.prototype._render = function () {\r\n        console.log(\"render-----\");\r\n        const vm = this;\r\n        let { render } = vm.$options;\r\n        let vnode = render.call(vm);\r\n        return vnode;\r\n    }\r\n}   ","import initMixin from \"./init.js\"\r\nimport renderMixin from \"./render.js\"\r\nimport lifecycleMixin from \"./lifecycle.js\"\r\n\r\nfunction Vue(options) {\r\n\r\n    // 进行vue的初始化操作\r\n    this._init(options);\r\n    // console.log(options, \"进行vue的初始化操作\");\r\n}\r\n\r\ninitMixin(Vue);//初始化的函数，在vue原型上面添加_init方法\r\nrenderMixin(Vue); //_render函数，在vue原型上面添加_render方法\r\nlifecycleMixin(Vue);//_update函数，在vue原型上面添加_update方法\r\nexport default Vue;"],"names":["isObject","obj","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","oldArrryMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","Observer","data","isArray","__proto__","walk","i","length","observe","keys","defineReactive","initState","options","$options","props","initData","computed","watch","_data","call","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","type","children","parent","start","console","log","element","push","charts","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","Watcher","exprOrFn","callback","getter","patch","oldVnode","vnode","isRealEmement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","tag","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","updateComponent","_render","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val"],"mappings":"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"}