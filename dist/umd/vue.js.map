{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/dep.js","../../src/observe/index.js","../../src/state.js","../../src/compile/parser-html.js","../../src/compile/index.js","../../src/util/next-tick.js","../../src/observe/schedular.js","../../src/observe/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/const.js","../../src/initGlobalAPI/mixin.js","../../src/initGlobalAPI/assets.js","../../src/initGlobalAPI/extend.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["// 判断是否是一个对象{}\r\nexport function isObject(obj) {\r\n    return typeof obj === \"object\" && obj !== null;\r\n}\r\nexport function def(obj, key, value) {\r\n    Object.defineProperty(obj, key, {\r\n        enumerable: false,\r\n        configurable: false,\r\n        value: value\r\n    });\r\n}\r\n\r\nexport function proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key]\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue\r\n        }\r\n    });\r\n}\r\n\r\n// 合并策略集合\r\nlet strats = {}\r\n\r\nconst LIFTCYCLE_HOOKS = [\r\n    \"beforeCreate\",\r\n    \"created\",\r\n    \"beforeMount\",\r\n    \"mounted\",\r\n    \"beforeUpdate\",\r\n    \"updated\",\r\n    \"beforeDetroy\",\r\n    \"detroyed\"\r\n]\r\n// 生命周期的合并策略\r\nLIFTCYCLE_HOOKS.forEach(hook => {\r\n    strats[hook] = mergeHook;\r\n})\r\nfunction mergeHook(parentVal, childVal) {\r\n    if (childVal) {\r\n        if (parentVal) {\r\n            return parentVal.concat(childVal);\r\n        } else {\r\n            return [childVal]\r\n        }\r\n    } else {\r\n        return parentVal\r\n    }\r\n}\r\n// components的合并策略\r\nstrats.components = mergeAssets;\r\nfunction mergeAssets(parentVal, childVal) {\r\n    let res = Object.create(parentVal);\r\n    if (childVal) {\r\n        for (let key in childVal) {\r\n            res[key] = childVal[key];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// 默认的合并策略\r\nexport function mergeOptions(parent, child) {\r\n    const options = {}\r\n    for (let key in parent) {\r\n        mergeField(key);\r\n    }\r\n\r\n    for (let key in child) {\r\n        // 如果已经合并了，就不需要再次合并、\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key);\r\n        }\r\n    }\r\n    // mergeField是默认的合并策略，还有一些需要特殊处理，比如data、生命周期\r\n    function mergeField(key) {\r\n        // 如果有自己的合并策略，执行自己的合并策略，不会使用默认的合并策略\r\n        if (strats[key]) {\r\n            return options[key] = strats[key](parent[key], child[key]);\r\n        }\r\n        if (typeof parent[key] === \"object\" && typeof child[key] === \"object\") {\r\n            options[key] = {\r\n                ...parent[key],\r\n                ...child[key]\r\n            }\r\n        } else if (child[key] == null) {\r\n            options[key] = parent[key];\r\n        } else {\r\n            console.log(key);\r\n            console.log(child[key]);\r\n            options[key] = child[key];\r\n        }\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\nexport function isReservedTag(tagName) {\r\n    let str = \"p,div,input,span,ul,li,ol,button\";\r\n    let obj = {};\r\n    str.split(\",\").forEach(tag => {\r\n        obj[tag] = true;\r\n    })\r\n    return obj[tagName];\r\n}","\r\nlet oldArrryMethods = Array.prototype;\r\nexport let arrayMethods = Object.create(oldArrryMethods);\r\nconst methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"unshift\",\r\n    \"shift\",\r\n    \"reverse\",\r\n    \"sort\",\r\n    \"splice\"\r\n]\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function (...args) {\r\n        // console.log(\"调用数组方法！\");\r\n        // console.log(args);\r\n        // AOP 切片编程\r\n        // （代理或者装饰器模式），先调用重写的方法，再调用原生方法\r\n        let result = oldArrryMethods[method].apply(this, args);\r\n        // 当 添加的属性还是对象时，要继续对新添加的属性进行劫持，添加get和set方法，变为响应式\r\n\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case \"push\":\r\n            case \"unshift\":\r\n                inserted = args;\r\n                break;\r\n            case \"splice\":\r\n                inserted = args.slice(2)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (inserted) {\r\n            ob.observerArray(inserted);\r\n            \r\n        }\r\n        ob.dep.notify();\r\n\r\n\r\n        return result;\r\n    }\r\n});","\r\nlet id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++;\r\n        this.subs = [];\r\n        this.get()\r\n    }\r\n    get() { }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n    depend() {\r\n        // this.subs.push(watcher);\r\n        // 让当前的watcher记住我当前的dep（即属性，watcher订阅了哪个属性）\r\n        if (Dep.target) {\r\n            Dep.target.addDep(this);\r\n        }\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update())\r\n    }\r\n}\r\n\r\nlet stack = []\r\nexport function pushTarget(watcher) {\r\n    Dep.target = watcher;\r\n    stack.push(watcher);\r\n}\r\n\r\nexport function popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1]\r\n}\r\n\r\nexport default Dep","import { isObject, def } from \"../util/index.js\"\r\nimport { arrayMethods } from \"./array.js\";\r\nimport Dep from \"./dep.js\";\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // 此处的dep是给数组做依赖收集，派发更新用的\r\n        this.dep = new Dep;\r\n        // console.log(data, \"Observer类\")\r\n        // 给每一个监测的属性添加 __ob__ 属性\r\n        // 1、可判断是否为响应式对象（是否已经被监测）\r\n        // data.__ob__ = this;\r\n        def(data, '__ob__', this);\r\n        if (Array.isArray(data)) {\r\n            // 需要重写能够改变数组自身的方法，如this.arr.push({name:'zs'}) ,给新添加的属性设置get和set方法\r\n            data.__proto__ = arrayMethods;\r\n            // 对数组进行监测\r\n            // 数组每一项为对象时，才进行监测\r\n            this.observerArray(data);\r\n        } else {\r\n            // 对对象进行监测\r\n            this.walk(data);\r\n        }\r\n    }\r\n    observerArray(data) {\r\n        for (let i = 0; i < data.length; i++) {\r\n            observe(data[i]);\r\n        }\r\n    }\r\n    walk(data) {\r\n        let keys = Object.keys(data);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let value = data[key];\r\n            defineReactive(data, key, value);\r\n        }\r\n    }\r\n}\r\n\r\nexport function observe(data) {\r\n    // console.log(data, \"observe\");\r\n    // console.log(isObject(data));\r\n    if (!isObject(data)) {\r\n        return;\r\n    }\r\n\r\n    return new Observer(data);//用来观测对象\r\n}\r\n\r\n// 定义响应式数据，将数据变为可观测的响应式对象\r\nfunction defineReactive(data, key, value) {\r\n    // <div>{{name}}{{name}}</div>\r\n    // 此处为闭包，当渲染watcher执行getter的时候，会去触发name的getter\r\n    // 如上,页面上两次使用name,但都是同一个dep实例,id相同\r\n    let dep = new Dep();// 这个dep是给对象用的\r\n\r\n    // vue 数据层次过多，需要递归解析对象属性，一次添加set和get方法\r\n    // 递归实现深度监测\r\n    let childOb = observe(value);//这个value可能是数组，也可能是对象，返回的结果是Observer的实例\r\n    Object.defineProperty(data, key, {\r\n        get() {\r\n            // 每个属性都对应着自己的watcher，即订阅者\r\n            // 订阅了自己，setter的时候要去通知订阅者进行更新\r\n            // 如果当前有wacher，需要将watcher和dep建立一个关系\r\n            if (Dep.target) {\r\n                dep.depend();//意味着我要将watcher存起来\r\n                // console.log(\"childOb是什么：\",childOb);\r\n                if (childOb) {\r\n                    childOb.dep.depend();// 收集了数组的相关依赖\r\n                    // 如果数组中还有数组\r\n                    if (Array.isArray(value)) {\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newValue) {\r\n            if (value === newValue) return;\r\n            observe(newValue); //继续递归劫持用户设置的值，因为设置的值可能是一个对象，如 this.obj = {name:'zs'} => this.obj = {age: 20}\r\n            value = newValue\r\n            dep.notify();//通知依赖的watcher来进行更新\r\n        }\r\n    })\r\n\r\n}\r\n\r\nfunction dependArray(value) {\r\n    for (let i = 0; i < value.length; i++) {\r\n        let current = value[i];\r\n        // 数组中的数组进行依赖收集\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        // 数组多层嵌套，内部还是数组，此时要递归\r\n        if (Array.isArray(current)) {\r\n            dependArray(current);\r\n        }\r\n    }\r\n}","import { observe } from \"./observe/index.js\"\r\nimport { proxy } from \"./util/index.js\"\r\n\r\nexport default function initState(vm) {\r\n    const options = vm.$options;\r\n    // console.log(options);\r\n    // vue 数据来源， 属性 方法 数据 计算属性  watch\r\n    if (options.props) {\r\n        initProps(vm);\r\n    }\r\n    if (options.methods) {\r\n        initMethods(vm);\r\n    }\r\n    if (options.data) {\r\n        initData(vm);\r\n    }\r\n    if (options.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (options.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\nfunction initProps() { }\r\nfunction initMethods() { }\r\n\r\nfunction initData(vm) {\r\n    // 数据初始化工作\r\n    let data = vm.$options.data;\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\r\n\r\n    //做了一层代理，vm.name 代理到 vm._data.name \r\n    for (let key in data) {\r\n        proxy(vm, \"_data\", key);\r\n    }\r\n\r\n    // console.log(data, \"数据初始化工作\")\r\n    // 对象劫持，数据发生改变得到通知，刷新页面\r\n    // Object.defineProperty() 给属性添加set和get方法，设置getter 和 setter\r\n    observe(data);\r\n}\r\nfunction initComputed() { }\r\nfunction initWatch() { }","// ast语法树，用对象来描述原生（html标签语法）语法的\r\n// 虚拟dom，用对象来描述dom节点的\r\n\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n// const dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconst doctype = /^<!DOCTYPE [^>]+>/i\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nconst comment = /^<!\\--/\r\nconst conditionalComment = /^<!\\[/\r\n\r\n\r\nlet root = null;//根节点 \r\nlet currentParent;//标识当前的父节点\r\nlet stack = [];\r\nconst ELEMENT_TYPE = 1;//元素类型，如div,p,span....\r\nconst TEXT_TYPE = 3;//文本类型\r\n\r\nfunction createASTElement(tagName, attrs) {\r\n    return {\r\n        tagName: tagName,\r\n        type: ELEMENT_TYPE,\r\n        children: [],\r\n        attrs: attrs,\r\n        parent: null,\r\n    }\r\n}\r\n\r\nfunction start(tagName, attrs) {\r\n    // console.log(\"开始标签：\", tagName, \"属性是：\", attrs);\r\n    // 遇到开始标签，就创建一个ast元素\r\n    let element = createASTElement(tagName, attrs);\r\n    if (!root) {\r\n        root = element\r\n    }\r\n    currentParent = element;//把当前元素标记为父ast树\r\n    stack.push(element);\r\n}\r\nfunction charts(text) {\r\n    // console.log(\"文本是：\", text);\r\n    text = text.replace(/\\s/g, '');\r\n    if (text) {\r\n        currentParent.children.push({\r\n            text,\r\n            type: TEXT_TYPE\r\n        });\r\n    }\r\n}\r\nfunction end(tagName) {\r\n    // console.log(\"结束标签：\", tagName);\r\n    let element = stack.pop();\r\n    currentParent = stack[stack.length - 1];\r\n    if (currentParent) {\r\n        element.parent = currentParent;\r\n        currentParent.children.push(element);\r\n    }\r\n}\r\n\r\n\r\nexport function parseHTML(html) {\r\n    // 循环解析html字符串\r\n    while (html) {\r\n        let textEnd = html.indexOf(\"<\");\r\n        if (textEnd === 0) {\r\n            // 如果为0，肯定是第一个标签，且不是开始标签就是结束标签 \r\n            // parseStartTag方法获取匹配的结果，tagName  attrs\r\n            let startTagMatch = parseStartTag();\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs);\r\n                continue;//如果开始标签匹配完毕后，继续下一次的匹配\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        let text;\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd);\r\n        }\r\n        if (text) {\r\n            advance(text.length);\r\n            charts(text);\r\n        }\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseStartTag() {\r\n        let start = html.match(startTagOpen);//匹配第一个标签名\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);//将标签删除\r\n            let end, attr;\r\n            // while 匹配属性\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);//将属性删除\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length);//标签名和属性已经匹配完成，去掉开始标签的>\r\n                return match;\r\n            }\r\n            // console.log(match)\r\n        }\r\n\r\n        // console.log(html)\r\n    }\r\n    return root;\r\n}\r\n\r\n\r\n\r\n// html标签转换成ast语法树\r\n// <div id=\"app\">\r\n//     <p>hello</p>\r\n// </div>\r\n// // nodeType===1 元素    nodeType === 3 文本\r\n// let root = {\r\n//     tag: \"div\",\r\n//     type: 1,\r\n//     attrs: [{ name: \"id\", value: \"app\" }],\r\n//     parent: null,\r\n//     child: [\r\n//         {\r\n//             tag: \"p\",\r\n//             type: 1,\r\n//             attrs: [],\r\n//             parent: root,\r\n//             child: [\r\n//                 {\r\n//                     text: \"hello\",\r\n//                     type: 3\r\n//                 }\r\n//             ]\r\n//         }\r\n//     ]\r\n// }","import { parseHTML } from \"./parser-html.js\"\r\n\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n// 处理属性，拼接成为属性的字符串\r\nfunction genProps(attrs) {\r\n    let str = \"\";\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === \"style\") {\r\n            let obj = {};\r\n            attr.value.split(\";\").forEach(item => {\r\n                let [key, value] = item.split(\":\");\r\n                obj[key] =  value;\r\n            });\r\n            attr.value = obj;\r\n            str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n        }\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nfunction genChildren(el) {\r\n    let children = el.children;\r\n    if (children && children.length > 0) {\r\n        return `${children.map(c => gen(c)).join(',')}`\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        // 元素标签\r\n        return generate(node)\r\n    } else {\r\n        let text = node.text;\r\n        let tokens = [];\r\n        let match, index;\r\n        let lastIndex = defaultTagRE.lastIndex = 0;\r\n        while (match = defaultTagRE.exec(text)) {\r\n            index = match.index;\r\n            if (index > lastIndex) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`);\r\n            lastIndex = index + match[0].length;\r\n        }\r\n        if (lastIndex < text.length) {\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n        }\r\n        return `_v(${tokens.join('+')})`\r\n    }\r\n}\r\nfunction generate(el) {\r\n    let children = genChildren(el);\r\n    let code = `_c(\"${el.tagName}\",${el.attrs.length > 0 ? genProps(el.attrs) : 'undefined'\r\n        }${children ? `,${children}` : ''\r\n        })`\r\n\r\n    return code;\r\n}\r\nexport function compileToFunction(template) {\r\n    // console.log(template, 'template 转换 render方法');\r\n    // 1、解析html字符串，将html字符串解析成ast语法树\r\n    let root = parseHTML(template);\r\n    // console.log(root);\r\n\r\n\r\n    // 2、需要将ast语法树生成最终的render函数,就是字符串拼接（模板引擎）\r\n    // 核心思路就是将下面的模板转化成下面的字符串\r\n    // 模板： <div id=\"app\"><p>hello {{name}}</p> hello</div>\r\n    // 将html字符串转化成ast语法树，再将ast语法树，再次转化成下面的js语法\r\n    // 字符串： _c(\"div\",{id:app},_c(\"p\",undefined,_v(\"hello\" + _s(name))),_v(\"hello\"))\r\n\r\n    let code = generate(root);\r\n    // console.log(code);\r\n\r\n    //所有的模板引擎实现，都需要new Function + with\r\n    let renderFn = new Function(`with(this){return ${code}}`);\r\n    // renderFn = function render() { }\r\n    // vue的render方法返回的是虚拟dom\r\n    return renderFn //render函数\r\n}\r\n\r\n\r\n","\r\nlet callBacks = [];\r\nlet waiting = false;\r\n\r\nfunction flusCallback() {\r\n    callBacks.forEach(cb => cb());\r\n    waiting = false;\r\n    callBacks = [];\r\n}\r\nexport function nextTick(cb) {\r\n    callBacks.push(cb);\r\n    // waiting的作用：\r\n    // 同一个tick同步代码还没执行完成，不会让它重复添加setTimeout\r\n    if (waiting === false) {\r\n        setTimeout(flusCallback, 0);\r\n        waiting = true;\r\n    }\r\n}","import { nextTick } from \"../util/next-tick.js\"\r\n\r\nlet queue = [];\r\nlet has = {};\r\n\r\nfunction flushSchedularQue() {\r\n    queue.forEach(watcher => watcher.run());\r\n    queue = [];\r\n    has = {};\r\n}\r\nexport function queueWatcher(watcher) {\r\n    let id = watcher.id;\r\n    if (has[id] == null) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n\r\n        // 宏任务和微任务，，vue里面使用了vue.nextTick来实现\r\n        // vue.nextTick 优雅降级处理\r\n        // 1、promise 2、mutationObserver 3、setImmediate 4、setTimeout\r\n\r\n        // setTimeout(flushSchedularQue, 0);\r\n        nextTick(flushSchedularQue);\r\n    }\r\n}","import { pushTarget, popTarget } from \"./dep.js\"\r\n// schedular：调度\r\nimport { queueWatcher } from \"./schedular.js\"\r\n\r\nlet id = 0;\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, callback, options) {\r\n        this.vm = vm;\r\n        this.callback = callback;\r\n        this.options = options;\r\n        this.id = id++;\r\n\r\n        this.deps = []\r\n        this.depsId = new Set();\r\n\r\n        // 将内部传进来的回调方法放在getter属性上\r\n        this.getter = exprOrFn;\r\n        // 调用get方法，会让渲染watcher执行\r\n        this.get();\r\n    }\r\n    get() {\r\n        // 把当前的watcher存起来，存在dep里面\r\n        pushTarget(this);\r\n        // 渲染watcher的执行，此时会调用vm_update(vm._render),\r\n        // 此时会去取值，会触发属性的getter\r\n        this.getter();\r\n        // 移除watcher\r\n        popTarget();\r\n    }\r\n    addDep(dep) {\r\n        // watcher里面不能存放重复的dep，dep里面也不能存放重复的watcher\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            this.depsId.add(id);\r\n            this.deps.push(dep);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n    update() {\r\n        // this.get();\r\n        // 异步更新，等同步任务执行完成之后，再去执行更新\r\n        // 此时还是同步，通过nextTick来变成异步任务，放到下一个tick去执行\r\n        \r\n        queueWatcher(this);\r\n    }\r\n    run() {\r\n        this.get();\r\n    }\r\n}\r\n\r\n\r\nexport default Watcher","export function patch(oldVnode, vnode) {\r\n    // console.log(\"开始patch，虚拟节点vnode创建出真实的节点，替换掉真实的vm.$el\");\r\n    // console.log(oldVnode);\r\n    // console.log(vnode);\r\n    // console.log(oldVnode.nodeType);\r\n\r\n    // 递归创建真实节点，替换掉老节点\r\n    // 第一步：判断是更新还是渲染\r\n    // 虚拟节点里面没有nodeType，真实节点里面有\r\n    const isRealEmement = oldVnode.nodeType;\r\n    let el;\r\n    // 第一次渲染 oldVnode是当前的 div id=\"app\"\r\n    // 以后更新 oldVnode 是上一次的dom\r\n    if (isRealEmement) {\r\n        const oldElm = oldVnode;//当前的 div id=\"app\"\r\n        const parentElm = oldElm.parentNode;//body\r\n\r\n        // vnode创建成真实dom\r\n        el = createElm(vnode);\r\n        // createElm(vnode)创建的新的真实dom插入到老节点的后面\r\n        parentElm.insertBefore(el, oldElm.nextSibling);\r\n        // 然后删除老节点,这样就完成了替换\r\n        parentElm.removeChild(oldElm);\r\n    }\r\n    // console.log(el);\r\n    return el;\r\n}\r\n\r\nfunction createElm(vnode) { //根据虚拟节点创建真实的节点\r\n    // console.log(vnode, \"根据虚拟节点创建真实的节点\");\r\n    let { tag, children, key, data, text } = vnode;\r\n\r\n    // tag为标签，就创建标签，否则就是文本并创建\r\n    console.log(tag);\r\n    if (typeof tag === \"string\") {\r\n        // tag为字符串时，可能是html标签也有可能是组件\r\n        vnode.el = document.createElement(tag);\r\n        updateProperties(vnode);\r\n        //递归创建子节点，并将子节点添加到父节点上面 \r\n        children.forEach(child => {\r\n            return vnode.el.appendChild(createElm(child));\r\n        })\r\n    } else {\r\n        // 创建的真实节点放在vnode上面，\r\n        // 虚拟dom上映射着真实的dom，方便后续更新操作\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n\r\n    return vnode.el\r\n}\r\n\r\n// 更新属性\r\nfunction updateProperties(vnode) {\r\n    let newProps = vnode.data;\r\n    let el = vnode.el;\r\n\r\n    for (let key in newProps) {\r\n        if (key === \"style\") {\r\n            for (let styleName in newProps.style) {\r\n                el.style[styleName] = newProps.style[styleName];\r\n            }\r\n        } else if (key === \"class\") {\r\n            el.className = newProps.class;\r\n        } else {\r\n            el.setAttribute(key, newProps[key]);\r\n        }\r\n    }\r\n}","import Watcher from \"./observe/watcher.js\"\r\nimport { patch } from \"./vdom/patch.js\"\r\n\r\nexport default function lifecycleMixin(Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        // console.log(vnode);\r\n        let vm = this;\r\n\r\n        // console.log(vm.$el);\r\n        // 此时虚拟dom已经生成，通过虚拟dom vnode，去渲染出真实的dom\r\n        // 需要用虚拟节点vnode创建出真实的节点，替换掉真实的vm.$el\r\n        vm.$el = patch(vm.$el, vnode);\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    const options = vm.$options;\r\n    vm.$el = el;//真是的dom元素\r\n    // console.log(options)\r\n    callHook(vm,\"beforeMount\");\r\n    // 渲染页面\r\n    // 无论是渲染还是更新都会调用updateComponent函数 \r\n    let updateComponent = () => {\r\n        // 第一步：调用vm._render生成虚拟dom，vm._render调用的是options.render\r\n        // vm._render为vue原型上的一个方法，见render.js\r\n        // 在 调用mountComponent函数之前已经将创建的render方法挂载到了options上面\r\n        // 第二步：vm._update 将虚拟dom生成真实的dom\r\n        console.log(\"更新了几次\");\r\n        vm._update(vm._render());\r\n    }\r\n\r\n    // 渲染watcher，每个组件都有一个渲染watcher\r\n    // true 表示是一个渲染watcher\r\n    // 每次new一个实例对象的时候，都会起执行updateComponent方法\r\n\r\n    new Watcher(vm, updateComponent, () => { }, true);\r\n    callHook(vm,\"mounted\");\r\n}\r\n\r\n// 发布的过程\r\nexport function callHook(vm, hook) {\r\n    let handlers = vm.$options[hook];\r\n    if (handlers) {\r\n        for (let i = 0; i < handlers.length; i++) {\r\n            // call(vm) 保证用户在使用声明周期的时候，内部的this指向的是vue实例\r\n            handlers[i].call(vm);\r\n        }\r\n    }\r\n}\r\n\r\n","import initState from \"./state.js\"\r\nimport { compileToFunction } from \"./compile/index.js\"\r\nimport { mountComponent, callHook } from \"./lifecycle.js\"\r\nimport { mergeOptions } from \"./util/index.js\"\r\nimport { nextTick } from \"./util/next-tick.js\"\r\n\r\nexport default function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        // console.log(options)\r\n        // 数据的劫持\r\n        const vm = this;\r\n        // vue中this.$options 指代的就是用户定义的属性\r\n        // vm.$options = options;\r\n        // 用户传入的options和Vue.options合并到vm.$options上，即实例的$options上面\r\n        // options指代的就是用户定义的属性\r\n        // vm.constructor.options 有些实例是继承而来，所以始终要指向实例自身的options\r\n        // 将用户传递的 和 全局的 进行合并，统一放在$options上面\r\n        console.log(vm.constructor.options)\r\n        vm.$options = mergeOptions(vm.constructor.options, options);\r\n        console.log(vm.$options)\r\n\r\n        callHook(vm, \"beforeCreate\");\r\n        // 初始化状态\r\n        initState(vm);\r\n        callHook(vm, \"created\");\r\n\r\n\r\n        // 用户传入 el 需要将数据渲染到页面上,实现挂载流程\r\n        // 模板有三种方式 render template el\r\n        // 有个顺序优先级的 render最高 \r\n\r\n        if (vm.$options.el) {\r\n            // console.log(vm.$options.el);\r\n            vm.$mount(vm.$options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        let vm = this;\r\n        let options = vm.$options;\r\n        el = document.querySelector(el);\r\n        // console.log(el)\r\n        // 优先级，默认查找有没有render方法，没有render会去查找有没有template，\r\n        // 没有template 会去使用 el 中的内容\r\n        if (!options.render) {\r\n            let template = options.template;//取出模板，如果有对模板进行编译\r\n            if (!template && el) {\r\n                // 没有模板，且有 el ，将el赋值给template\r\n                template = el.outerHTML;\r\n            }\r\n            // 将template转化成render函数\r\n            const render = compileToFunction(template);\r\n            options.render = render;\r\n        }\r\n        // 拿到render方法之后，开始渲染当前的组件\r\n        // vm上面可以拿到options render方法，执行render方法之后的结果替换掉 el这个标签\r\n        mountComponent(vm, el);\r\n    }\r\n\r\n    // 注册$nextTick，给用户使用\r\n    Vue.prototype.$nextTick = nextTick;\r\n}","import { isObject, isReservedTag } from \"../util/index.js\";\r\n\r\nexport function createElement(vm, tag, data = {}, ...children) {\r\n    // console.log(tag, data, children);\r\n    let key = data.key;\r\n    if (key) {\r\n        delete data.key;\r\n    }\r\n\r\n    // isReservedTag判断是否为html标签\r\n    // 两种情况 1、html标签 2、组件(Vue.component,组件内components,父组件引入子组件)\r\n    // 组件，例如<my-component></my-component>\r\n    console.log(isReservedTag(tag))\r\n    if (isReservedTag(tag)) {\r\n        return vnode(tag, data, key, children, undefined);\r\n    } else {\r\n        // 组件\r\n        // 根据构造函数创造虚拟节点\r\n        let Ctor = vm.$options.components[tag];\r\n        return createComponent(vm, tag, data, key, children, Ctor);\r\n    }\r\n}\r\n\r\nexport function createComponent(vm, tag, data, key, children, Ctor) {\r\n    // Ctor为对象时，是用户定义的组件内的属性\r\n    // 需要用Vue.extend转化为构造函数\r\n    // components: {\r\n    //     \"my-component\": {\r\n    //        \"template\": \"<div>111111</div>\"\r\n    //     }\r\n    // }\r\n    // Vue.component定义的全局组件已经经过Vue.extend转化为构造函数了\r\n    // Vue.component(\"my-component\", {\r\n    //     \"template\": \"<div>hello</div>\"\r\n    // });\r\n    if (isObject(Ctor)) {\r\n        Ctor = vm.$options._base.extend(Ctor);\r\n    }\r\n    return vnode(`vue-component-${Ctor.cid}-${tag}`, data, key, undefined, { Ctor, children });\r\n}\r\nexport function createTextNode(vm, text) {\r\n    // console.log(text);\r\n    return vnode(undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n// 创建虚拟dom\r\nfunction vnode(tag, data, key, children, text, componentOptions) {\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text,\r\n        componentOptions\r\n    }\r\n}\r\n\r\n// 1、将template模板（html标签）转换成ast语法树 => 生成render方法  => 生成虚拟dom => 真实的dom\r\n// 2、更新的时候重新生成虚拟dom，和上次的虚拟dom作对比，只把改变的虚拟dom重新生成真实的dom","import { createElement, createTextNode } from \"./vdom/create-element.js\"\r\n\r\nexport default function renderMixin(Vue) {\r\n    // \r\n    // _c 创建元素的虚拟节点\r\n    // _v 创建文本的虚拟节点\r\n    // _s JSON，stringify\r\n    // 使用了 with ，render.call(vm)，调用_c,_v,_s方法时，会去vm以及vm的原型上面去找这些方法\r\n    // 巧妙的一点是，_s(val)函数执行时，传入的val即为模板中设置的属性{{name}}，因为with(this){},\r\n    // 此时的上下文为this，即为传入的vm，即是执行vm.name，之前已做过proxy()代理，vm.name => vm._data.name\r\n\r\n    Vue.prototype._c = function () {\r\n        return createElement(this, ...arguments);\r\n    }\r\n    Vue.prototype._v = function (text) {\r\n        return createTextNode(this, text);\r\n    }\r\n    Vue.prototype._s = function (val) {\r\n        return val === null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\r\n    }\r\n\r\n    Vue.prototype._render = function () {\r\n        // console.log(\"render-----\");\r\n        const vm = this;\r\n        let { render } = vm.$options;\r\n        let vnode = render.call(vm);\r\n        return vnode;\r\n    }\r\n}","\r\n\r\nexport const ASSETS_TYPE = [\r\n    \"component\",\r\n    \"filter\",\r\n    \"directive\"\r\n];","import { mergeOptions } from \"../util/index.js\"\r\n\r\n\r\nexport default function initmixin(Vue) {\r\n    // 生命周期的合并策略,同名的生命周期会合并成一个数组 [beforeCreate,beforeCreate]\r\n    // 依次执行，不会覆盖，，其实是一个发布订阅模式\r\n    Vue.mixin = function (mixin) {\r\n        // 面试经常问，如何实现两个对象的合并\r\n        this.options = mergeOptions(this.options, mixin);\r\n    }\r\n}","import { ASSETS_TYPE } from \"./const.js\"\r\n\r\nexport default function initAssetRegisters(Vue) {\r\n    ASSETS_TYPE.forEach(type => {\r\n        Vue[type] = function (id, definition) {\r\n            console.log(id, definition);\r\n            if (type === \"component\") {\r\n                // 注册全局组件\r\n                // 使用extend方法，将对象definition变成构造函数\r\n                // this.options._base 指每个组件的基类\r\n                // this.options._base 可能是Vue 可能是子子组件的基类\r\n\r\n                definition = this.options._base.extend(definition);\r\n            } else if (type === \"filter\") {\r\n\r\n            } else if (type === \"directive\") {\r\n\r\n            }\r\n\r\n            this.options[type + \"s\"][id] = definition\r\n        }\r\n    });\r\n}","import { mergeOptions } from \"../util/index.js\";\r\n\r\nlet cid = 0;\r\nexport default function initExtend(Vue) {\r\n    // 全局注册组件\r\n    // 创建子类，继承于父类，扩展的时候都扩展都自己的属性\r\n    // 原型继承\r\n    Vue.extend = function (extendOptions) {\r\n        console.log(\" Vue.extend\", extendOptions)\r\n        let Sub = function vueComponent(options) {\r\n            this._init(options);\r\n        }\r\n        Sub.cid = cid++;\r\n        Sub.prototype = Object.create(this.prototype);\r\n        Sub.prototype.constructor = Sub;\r\n        Sub.options = mergeOptions(this.options, extendOptions);\r\n        return Sub;\r\n    }\r\n}","\r\nimport { ASSETS_TYPE } from \"./const.js\"\r\nimport initMixin from \"./mixin.js\"\r\nimport initAssetRegisters from \"./assets.js\"\r\nimport initExtend from \"./extend.js\"\r\n\r\n\r\nexport default function initGlobalAPI(Vue) {\r\n    // 整合了所有的全局相关的内容\r\n    Vue.options = {}\r\n\r\n    // 合并策略\r\n    initMixin(Vue);\r\n\r\n    // 初始化的全局过滤器，指令，组件\r\n    ASSETS_TYPE.forEach(type => {\r\n        Vue.options[type + \"s\"] = {};\r\n    });\r\n\r\n\r\n    // _base 是vue的构造函数\r\n    Vue.options._base = Vue;\r\n\r\n    // 注册extend方法\r\n    initExtend(Vue);\r\n    initAssetRegisters(Vue);\r\n}","import initMixin from \"./init.js\"\r\nimport renderMixin from \"./render.js\"\r\nimport lifecycleMixin from \"./lifecycle.js\"\r\nimport initGlobalAPI from \"./initGlobalAPI/index.js\"\r\n\r\nfunction Vue(options) {\r\n\r\n    // 进行vue的初始化操作\r\n    this._init(options);\r\n    // console.log(options, \"进行vue的初始化操作\");\r\n}\r\n\r\ninitMixin(Vue);//初始化的函数，在vue原型上面添加_init方法\r\nrenderMixin(Vue); //_render函数，在vue原型上面添加_render方法\r\nlifecycleMixin(Vue);//_update函数，在vue原型上面添加_update方法\r\n\r\n\r\n// 初始化全局方法，构造函数静态方法 ，例如Vue.mixin\r\ninitGlobalAPI(Vue);\r\nexport default Vue;"],"names":["isObject","obj","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","strats","LIFTCYCLE_HOOKS","forEach","hook","mergeHook","parentVal","childVal","concat","components","mergeAssets","res","create","mergeOptions","parent","child","options","mergeField","hasOwnProperty","console","log","isReservedTag","tagName","str","split","tag","oldArrryMethods","Array","prototype","arrayMethods","methods","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","dep","notify","id","Dep","constructor","subs","addSub","watcher","push","depend","target","addDep","update","stack","pushTarget","popTarget","pop","length","Observer","data","isArray","__proto__","walk","i","observe","keys","defineReactive","childOb","dependArray","current","initState","$options","props","initData","computed","watch","_data","call","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","attrs","type","children","start","element","charts","text","replace","end","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","callBacks","waiting","flusCallback","cb","nextTick","setTimeout","queue","has","flushSchedularQue","run","queueWatcher","Watcher","exprOrFn","callback","deps","depsId","Set","getter","add","patch","oldVnode","vnode","isRealEmement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","class","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","$mount","querySelector","render","outerHTML","$nextTick","undefined","Ctor","createComponent","_base","extend","cid","componentOptions","renderMixin","_c","arguments","_v","_s","val","ASSETS_TYPE","initmixin","mixin","initAssetRegisters","definition","initExtend","extendOptions","Sub","vueComponent","initGlobalAPI"],"mappings":"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"}